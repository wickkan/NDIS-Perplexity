redirectsOrigin = "inline"
headersOrigin = "inline"

[dev]
command = "npm run dev"
targetPort = 3000.0
port = 8888.0
publish = "out"

[images]
remote_images = ["^(?:http(?:s)?:\\/\\/localhost(?:\\/(?!\\.)(?:(?:(?!(?:^|\\/)\\.).)*?)|$))$", "^(?:http(?:s)?:\\/\\/ndis-decoder-api\\.windsurf\\.io(?:\\/(?!\\.)(?:(?:(?!(?:^|\\/)\\.).)*?)|$))$", "^(?:http(?:s)?:\\/\\/ndis-decoder\\.windsurf\\.io(?:\\/(?!\\.)(?:(?:(?!(?:^|\\/)\\.).)*?)|$))$"]

[functions]

[functions."*"]

[[plugins]]
origin = "config"
package = "@netlify/plugin-nextjs"

[plugins.inputs]

[build]
publish = "/Users/kanishkaw/Desktop/Desktop Files/Tech/Perplexity/Decode-NDIS-Perplexity/frontend/.next"
publishOrigin = "config"
commandOrigin = "config"
base = "/Users/kanishkaw/Desktop/Desktop Files/Tech/Perplexity/Decode-NDIS-Perplexity/frontend"
command = "npm run build"
ignore = "git diff --quiet $CACHED_COMMIT_REF $COMMIT_REF ./"

[build.environment]
NEXT_DISABLE_ESLINT_DURING_BUILD = "true"
NEXT_TELEMETRY_DISABLED = "1"
NODE_ENV = "production"
NEXT_WEBPACK_USEPOLLING = "1"

[build.processing]

[build.processing.css]

[build.processing.html]

[build.processing.images]

[build.processing.js]

[build.services]

[[headers]]
for = "/_next/static/*"

[headers.values]
Cache-Control = "public, max-age=31536000, immutable"

[[redirects]]
from = "/_next/static/*"
to = "/static/:splat"
status = 200.0
force = false

[redirects.query]

[redirects.conditions]

[redirects.headers]

[[redirects]]
from = "/api/*"
to = "/.netlify/functions/api/:splat"
status = 200.0
force = false

[redirects.query]

[redirects.conditions]

[redirects.headers]

[[redirects]]
from = "/*"
to = "/index.html"
status = 200.0
force = false

[redirects.query]

[redirects.conditions]

[redirects.headers]

[[redirects]]
from = "/_next/image"
to = "/.netlify/images?url=:url&w=:width&q=:quality"
status = 200.0
force = false

[redirects.query]
url = ":url"
w = ":width"
q = ":quality"

[redirects.conditions]

[redirects.headers]

[[redirects]]
from = "/_ipx/*"
to = "/.netlify/images?url=:url&w=:width&q=:quality"
status = 200.0
force = false

[redirects.query]
url = ":url"
w = ":width"
q = ":quality"

[redirects.conditions]

[redirects.headers]